#include<bits/stdc++.h>
using namespace std;

class node{
     public:
    int data;
    node* left;
    node* right;
   
    node(int d){
        this->data=d;
        this->left=NULL;
        this->right=NULL;
    }
};


node* leverOrderTraversal(node* root){
    queue<node*>q;
    q.push(root);
    q.push(NULL);
    
    while(!q.empty()){
       node* temp=q.front();
        q.pop();
        
        if(temp==NULL){
            cout<<endl;
            if(!q.empty()){
                q.push(NULL);
            }
        }else{
            cout<<temp->data<<" ";
            
            if(temp->left){
                q.push(temp->left);
            }
            if(temp->right){
                q.push(temp->right);
            }
        }
        
    }
    return root;
}



void buildlevelorder(node* &root){
    queue<node*>q;
    int data;
    cout<<"enter the data for root "<<endl;
    cin>>data;
    
    root=new node(data);
    q.push(root);
    
    while(!q.empty()){
        node* temp=q.front();
        q.pop();
        int leftside,rightside;
        cout<<"enter the data for left side: "<<temp->data<<endl;;
        cin>>leftside;
        
        if(leftside!=-1){
            temp->left=new node(leftside);
            q.push(temp->left);
        }
        
        cout<<"enter the data for right side: "<<temp->data<<endl;;
        cin>>rightside;
        
        if(rightside!=-1){
            temp->right=new node(rightside);
            q.push(temp->right);
        }
    }
}

int main(){
 node* root=NULL;

buildlevelorder(root);
leverOrderTraversal(root);
}
